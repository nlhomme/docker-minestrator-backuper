# Source for multi arch build:
# https://namiops.medium.com/build-a-multi-arch-docker-image-with-circleci-for-amd64-arm64-risc64-3ad0537a1f28
---
version: 2.1


# orbs:
#   yamllint: orbss/yamllint@0.0.3


commands:
  setup:
    steps:
      - checkout
      - run:
          name: Setup buildx and qemu
          command: |
            sudo apt-get update
            sudo apt-get install -y qemu-user-static
            sudo apt-get install -y binfmt-support
      - run:
          name: Check versions
          command: |
            qemu-aarch64-static --version
            update-binfmts --version
      - run:
          name: Create builder
          command: |
            export DOCKER_CLI_EXPERIMENTAL=enabled
            docker buildx create --name arm-builder
            docker buildx use arm-builder
            docker buildx inspect --bootstrap


jobs:
#  execute-yamllint:
#    executor: yamllint/default
#    steps:
#      - checkout
#      - yamllint/execute

  amd64-build:
    machine:
      image: 'ubuntu-2004:current'
    steps:
      - setup
      - run:
          name: Build amd64 image
          command: |
            DOCKER_CLI_EXPERIMENTAL=enabled
              docker buildx build --platform linux/amd64 .
      - run:
          name: Run amd64 image
          command: |
            DOCKER_CLI_EXPERIMENTAL=enabled
            docker buildx build --platform linux/amd64 --load -t amd64-image .
            docker run -e sftpUsername=sftpUsername -e sftpPassword=sftpPassword -e sftpServer=sftpServer -e transfertSpeedLimit=transfertSpeedLimit -e sftpInput=sftpInput --rm -v /tmp:/output --platform linux/amd64 -t -i amd64-image

  arm64-build:
    machine:
      image: 'ubuntu-2004:current'
    steps:
      - setup
      - run:
          name: Build and run arm64 image
          command: |
            DOCKER_CLI_EXPERIMENTAL=enabled
            docker buildx build --platform linux/arm64 --load -t arm-image .
            docker run -e sftpUsername=sftpUsername -e sftpPassword=sftpPassword -e sftpServer=sftpServer -e transfertSpeedLimit=transfertSpeedLimit -e sftpInput=sftpInput --rm -v /tmp:/output --platform linux/arm64 -t -i arm-image

workflows:
  version: 2
  build:
    jobs:
#      - execute-yamllint
      - amd64-build
      - arm64-build
